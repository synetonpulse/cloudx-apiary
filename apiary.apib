FORMAT: 1A
HOST: https://api.adminpulse.be

# AdminPulse API documentation

This documentation describes the adminpulse api endpoints.
In case you have any feedback or miss a certain functionality, let us know via support@adminpulse.be

- API Base URL : <code>api.adminpulse.be</code>
- API Identity token URL : <code>login.adminpulse.be/connect/token</code>
- API Identity authorize URL : <code>login.adminpulse.be/connect/authorize</code>

###General
####Errors
Status codes
- <code>200</code> OK
- <code>400</code> Bad Request, the endpoint was called using invalid data
- <code>401</code> Unauthorized, invalid or missing access token
- <code>404</code> Resource not found, make sure the correct URL was used
- <code>429</code> Too Many Requests, you're allowed to make 600 calls per minute.
- <code>500</code> Internal Server Error, make sure the correct access token was provided

### Authentication
OAuth2 will be used to protect adminpulse endpoints.
Before you can start using our endpoints, send a request to support@adminpulse.be to request a <code>client_id</code> and <code>client_secret</code>.

####Option 1 - Using a website with callback url
Keep in mind that you will have to register a <code>redirect URL</code> as well. This will be the URL being called by our OAuth authentication.

<i>example</i> : https://yourcompany/adminpulse/callback

Call the authorize endpoint using the specific parameters

<code>https://login.adminpulse.be/connect/authorize?client_id=***&response_type=code&scope=api.connect offline_access&redirect_uri=https://***/callback</code>


####Option 2 - Using a client application (or service)
In this case, no specific redirect or callback URL needs to be registered.
Call (post) the token endpoint to get access and refreshtokens
<code>https://login.adminpulse.be/connect/token</code>

- grant_type=password
- username=***
- password=***

###Scopes

To get a refresh token, you must request the offline_access scope. A refresh token allows you to refresh your access token and maintain an offline connection.

<ul>
<li>api.connect</li>
<li>offline_access (optional)</li>
</ul>

###Rate limiting
Your calls are rate limited by a combination of your unique client_id and the tenant you're making calls for (with a fallback value of the caller's IP Address).

The amount of calls remaining can be checked by looking at these response headers of each request:
- **x-remaining-calls-per-minute**: The amount of calls you can still make.
- **x-total-calls-per-minute**: The total amount of calls you can make per minute.

Please note: the minute referred to above is a sliding window (defaults to 600/min).

###Changelog
#### 2021 - May
- Adding interactions is now possible
- Query documents (based on the portal flag)
- Query relations based on a searchvalue (name, telephone, vat number, etc)

#### 2021 - March
- It is now possible to add documents using the Documents endpoint

#### 2021 - February
- Mark a task completed, or change the task status based on task type and deadline
- Add registrations 

####Postman
Check our postman collection to explore our API, check multiple examples and generate code based on your desired programming language.

https://postman.adminpulse.be/

# Group Relations
#### CRM type
* 0 = Other
* 2 = Prospect
* 3 = Customer

#### Type
* 0 = Company
* 2 = Sole proprietor
* 3 = Person

#### Relation link types
* 1 = Contacts (just a regular contact)
* 2 = Beneficiaries (begunstigde)
* 3 = Trustee (lasthebber) 
* 4 = Company owner (bedrijfsleider)
* 5 = Partner
* 6 = Shareholder (aandeelhouder)
* 7 = Auditor (bedrijfsrevisor, commisaris)
* 8 = Control by other means (controle door andere middelen)

#### Company owner position
* CEO = 0,
* Manager = 1,
* Director = 2,
* Administrator = 3,
* ExecutiveManager = 4,
* Associate = 5,
* ManagingDirector = 6,
* DailyManagementNonProfit = 7,
* ManagementNonProfit = 8,
* Liquidator = 9

#### Property rights (aandelen eigendomsrechten)
* 0 = Usufruct (vruchtgebruik)
* 1 = Bare ownership (naakte, blote eigendom)
* 2 = Full ownership (volle eigendom)
* 3 = Joint ownership (onverdeeldheid)

####Accounting software types
* 0 = Unknown
* 1 = Office
* 2 = Yuki
* 3 = ExactOnline
* 4 = ExpertMPlus
* 5 = Sage100
* 6 = SageBob
* 7 = WinBooks
* 8 = Octopus
* 9 = VeroCount
* 10 = Quadra
* 11 = Wings
* 12 = Horus
* 13 = WinAuditor
* 14 = Xero
* 15 = SageOne
* 16 = QuickBooks
* 17 = Other
* 18 = Popsy / Allegro
* 19 = Cubic
* 20 = TopPower
* 21 = Venice
* 22 = Adsolut
* 23 = ExactProacc

####Social Secretariat
* Other = 1,
* Attentia = 2,
* Securex = 3,
* Acerta = 4,
* Partena = 5,
* Alia = 6,
* Sodalis = 7,
* Randstad = 8,
* SDWorx = 9,
* Sofidi = 10,
* Accuria = 11,
* Caritas = 12,
* Sodiwe = 13,
* Xerius = 14,
* Liantis = 15,
* Incozina = 16,
* Salar = 17,
* Sodibe = 18,
* HDI = 19,
* UCM = 20,
* GroupS = 21,
* NatPat = 22,
* Unknown = 254,
* None = 255

####Social Security Fund
* Other = 1,
* GroupS = 2,
* Xerius = 3,
* Liantis = 4,
* Partena = 5,
* Acerta = 6,
* Securex = 7,
* Incozina = 8,
* Multipen = 9,
* Entraide = 10,
* Ucm = 11,
* NationalFund = 12,
* Nisse = 13, 
* Unknown = 254,
* None = 255

#### Vat periodicity
* Unknown = 0,
* Monthly = 1,
* Quarterly = 2,
* ExemptionSmallEnterprise = 3,
* ExemptionAgriculture = 4,
* Yearly = 5,
* ExemptionArticle44 = 6

#### Risk level (anti money laundering)
* Low = 0,
* Standard = 1,
* High = 100,

#### Relation link From | To
A relation link will be available in both directions. 
A relation will be <code>Partner</code> (defined as From), whereas the other side of the relation will be described as <code>Partner Of</code> (defined as To)

## List all relations [/relations?page={page}&pageSize={pageSize}&lastSyncTime={lastSyncTime}&searchCriteria={searchCriteria}]

### GET [GET]
List all relations with linked relations included.

+ Parameters
    + page (number, optional, `0`) ... When using paged request, pass in page number.
    + pageSize (number, optional, `50`) ... Number of results to return per page.
    + lastSyncTime (string, optional, `10102010`) ... Get changes newer than the given last sync time. This will allow partial updates. Format ddMMyyyy`)
    + searchCriteria (string, optional, `3237555555`) ... Search by name, telephone number or VAT number
    
+ Response 200 (application/json)

        [
            {
            "results": [
                {
                    "lastSyncDate": "2019-07-16T11:19:58.2778128",
                    "uniqueIdentifier": "APR00084",
                    "name": "Muziek en Co",
                    "addressStreet": "De Regenboog",
                    "addressNumber": "11",
                    "addressCity": "Mechelen",
                    "addressZipCode": "2800",
                    "addressCountryCode": "BE",
                    "addressCountry": "Belgium",
                    "legalForm": "BV",
                    "email": "bart.dekeersmaeker@syneton.be",
                    "phone": "+32 3 755 55 55",
                    "mobile": "+32 479 99 99 99"
                ],
            "pageCount": 2,
            "pageSize": 5,
            "totalRowCount": 7
            }
            
        ]

## Single relation [/relations/{uniqueidentifier}]

### GET [GET]
Get a single relation with all linked relations.

+ Parameters
    + uniqueidentifier (string, required, `APR00132`) The unique identifier, as defined by Admin Pulse.

+ Response 200 (application/json)

        [
            {
            "lastSyncDate": "2019-07-01T11:19:58.2778128",
            "uniqueIdentifier": "APR00084",
            "crmType": 3,
            "code": "KC00027",
            "startDate": "2019-01-14T00:00:00",
            "endDate": "2020-01-14T00:00:00",
            "foundingDate": "2019-01-14T00:00:00",
            "name": "Muziek en Co",
            "legalForm": "BVBA",
            "legalFormXbrl": "015",
            "addressStreet": "Bosdorp",
            "addressNumber": "11",
            "addressCity": "Mechelen",
            "addressZipCode": "2800",
            "addressCountryCode": "BE",
            "addressCountry": "Belgium",
            "email": "bart.dekeersmaeker@syneton.be",
            "phone": "+32 3 755 55 55",
            "mobile": "+32 479 99 99 99",
            "endFiscalYear": "2000-12-31T00:00:00",
            "vatNumber": "BE 0420.222.333",
            "totalRisk": 100,
            "purposeTransaction": "Anti - witwas : Doel van de relatie",
            "natureTransaction": "Anti - witwas : Aard van de transactie",
            "accountingSoftware": 22,
            "accountingAccessCode": "-xyz-",
            "accountingDigitalMailbox": "sample@inbox.com",
            "accountingRelationcode": "rel-123",
            "nextGeneralMeetingDate": "2019-01-14T00:00:00",
            "generalMeetingTime": "10:50:39",
            "generalMeetingLocation": "Antwerp"
            "ubo": {
                "relationUboDetails": [
                    {
                        "uniqueIdentifier": "APR00141"
                    },
                    {
                        "uniqueIdentifier": "APR00127"
                    }
                ]
            },
            "froms": [
                {
                    "linkType": 1,
                    "uniqueIdentifier": "APR00002"
                },
                {
                    "linkType": 6,
                    "uniqueIdentifier": "APR00141",
                    "shares": 50,
                    "votes": 50,
                    "representedByUniqueIdentifier": "APR00001"
                },
                {
                    "linkType": 6,
                    "uniqueIdentifier": "APR00127",
                    "shares": 60,
                    "votes": 60,
                    "representedByUniqueIdentifier": "APR00001"
                },
                {
                    "linkType": 4,
                    "uniqueIdentifier": "APR00010"
                }
            ],
            "tos": []
            }
        ]
        
# Group Registrations
#### Resource type
* Work = 0,
* Cost = 1,
* Travel = 2,
* Absence = 3

## Add registration [/registrations/add]

### Add [POST]

+ Request Add time / work registration (application/json)
    + Attributes
        + resourceType: `0` (number, required)
        + registrationDate: `2015-12-30` (required, string) - Date format as yyyy-mm-dd
        + relationIdentifier: `APR00001` (string, required) - Unique identifier of the relation
        + userIdentifier (string, required) - Email address of the employee
        + resourceIdentifier (string, required) - Pricelist item code
        + timeFrom: `11:00` (string, required)
        + timeTo: `12:00` (string, required)
        + remarkInternal  (string)
        + remarkInvoice  (string)

+ Response 200 (application/json)

+ Request Add product / cost registration (application/json)
    + Attributes
        + resourceType: `1` (number, required)
        + registrationDate: `2015-12-30` (required, string) - Date format as yyyy-mm-dd
        + registrationDate: `2015-12-30` (required, string) - Date format as yyyy-mm-dd
        + relationIdentifier: `APR00001` (string, required) - Unique identifier of the relation
        + userIdentifier (string, required) - Email address of the employee
        + resourceIdentifier (required, string) - Pricelist item code
        + quantity (required, number)
        + remarkInternal  (string)
        + remarkInvoice  (string)

+ Response 200 (application/json)

+ Request  Add travel registration (application/json)
    + Attributes
        + resourceType: `2` (number, required)
        + registrationDate: `2015-12-30` (required, string) - Date format as yyyy-mm-dd
        + registrationDate: `2015-12-30` (required, string) - Date format as yyyy-mm-dd
        + relationIdentifier: `APR00001` (string, required) - Unique identifier of the relation
        + userIdentifier (string, required) - Email address of the employee
        + resourceIdentifier (required, string) - Pricelist item code
        + quantity (required, number)
        + remarkInternal  (string)
        + remarkInvoice  (string)
    
+ Response 200 (application/json)

+ Request Add absence registration (application/json)
    + Attributes
        + resourceType: `3` (number, required)
        + registrationDate: `2015-12-30` (required, string) - Date format as yyyy-mm-dd
        + relationIdentifier: `APR00001` (string, required) - Unique identifier of the relation
        + userIdentifier (string, required) - Email address of the employee
        + resourceIdentifier (string, required) - Pricelist item code
        + timeFrom: `11:00` (string, required)
        + timeTo: `12:00` (string, required)
        + remarkInternal  (string)
        + remarkInvoice  (string)
        
+ Response 200 (application/json)

# Group Documents
#### Document types
* Unknown = -1,
* CODA = 3,
* Eid = 10,
* Other = 13,
* VatReceiptBelgium = 16,
* UBOLetter = 17,
* AuthorizationList = 19,
* FgovIntracom = 20,
* FgovCitReceipt (Corporate income tax, vennootschapsbelasting ontvangstbewijs) = 22 
* Klantenlisting / BTW listing = 28 ,
* Jaarrekening betaalbevestiging = 30,
* Jaarrekening = 31,
* Jaarrekening betaalverzoek = 35,
* FodPersonalIncomeTaxExcelReceipt = 33, 
* FodPersonalIncomeTaxExcelMandatesDeclarationStatus = 34,
* KBO uittreksel = 36
* PB - Tax On Web PDF = 21,
* PB - Aanslagbiljet = 37,
* PB - Voorbereiding van de aangifte in de personenbelasting = 38,
* PB - Voorstel van vereenvoudigde aangifte = 39,
* FOD - Inkomsten van buitenlandse oorsprong = 40,
* Contract - Rental agreement / Huurovereenkomst = 5000,
* Contract - Description of the location / Plaatsbeschrijving = 5001,

* Fiche 274 = 27400,
* Fiche 281.10 - Lonen = 28110,
* Fiche 281.11 - Pensioenfiche = 28111,
* Fiche 281.11 - Pensioenfiche - Betalingsfiche (PDOS) = 281110,
* Fiche 281.13 - Werkloosheidsuitkeringen = 28113,
* Fiche 281.15 - Inkomsten uit pensioensparen = 28115,
* Fiche 281.18 - Vervangingsinkomen = 28118,
* Fiche 281.20 - Bezoldigingen van bedrijfsleiders = 28120,
* Fiche 281.50 - Commissies, makelaarslonen, handelsrestorno’s, vacatiegelden, betalingen en andere voordelen alle aard = 28150,
* Fiche 281.61 - Leningen = 28161,
* Fiche 281.62 - Levensverzekering = 28162,
* Fiche 281.71 - Liveraliteiten - Giften in geld = 28171,
* Fiche 281.81 - Dienstencheques = 28181,
* Fiche 281.90 - Teruggave sociale bijdrage = 28190,

* 273 = 2730,
* 273A = 2734,
* 273S = 2735,

* Registration list (adminpulse registration xlsx) = 1000,

#### Signing status
* SigningEmpty = 1,
* SigningNeeded = 2,
* SigningRevoked = 3,
* SigningExpired = 4,
* SigningPending = 10,
* SigningFailed = 11,
* SigningRejected = 12,
* SigningCompleted = 20,
* SigningCompletedOriginal = 21,

## Add document [/documents/add]

### Add [POST]
* Form-data upload of a single document.
* In case *documenttype = -1*, the document will be *recognized* by AdminPulse.

+ Request (form-data)
    + Attributes
        + file (object, required) - form-data File
        + fileName  (string, required)
        + documentType (number, required)
        + creationDate: `2020-12-30` (string) - Date format as yyyy-mm-dd
        + documentDate: `2015-12-30` (string) - Date format as yyyy-mm-dd (will be used as document reference date)
        + relationIdentifier: `APR00001` (string) - Unique identifier of the relation
        + tagNames: `2020;PB` (string) - Seperated list of tags. Note : Tags will not be created when they don't exist.
+ Response 200 (application/json)

## List documents [/documents?page={page}&pageSize={pageSize}&relationIdentifier={relationIdentifier}&createDateFrom={createDateFrom}&createDateUntil={createDateUntil}&documentDateFrom={documentDateFrom}&documentDateUntil={documentDateUntil}&documentType={documentType}&signingStatus={signingStatus}&tagNames={tagNames}]

### GET [GET]
List all documents, based on the given query parameters.
By default, documents will not be public on our API. Make sure they are marked as "Public to API" by the user. 

More information can be found here : https://syneton.zendesk.com/hc/articles/360021907360

+ Parameters
    + page (number, optional, `0`) ... When using paged request, pass in page number.
    + pageSize (number, optional, `50`) ... Number of results to return per page.
    + relationIdentifier (string, optional, `APR00001`) ... Unique identifier of the relation
    + createDateFrom (string, optional, `30102010`) ... Documents created from
    + createDateUntil (string, optional, `30102011`) ... Documents created until
    + documentDateFrom (string, optional, `30102010`) ... Document date from (based on the content of the document, this could differ from the creation date)
    + documentDateUntil (string, optional, `30102011`) ... Document date from (based on the content of the document, this could differ from the creation date)
    + documentType (number, optional, `0`) ... The type of the document
    + signingStatus (number, optional, `0`) ... The signingStatus of the document (Signature pending, signed, etc)
    + tagNames (string, optional, `Permanent Dossier;PB`) ... ; delimited list of tags
+ Response 200 (application/json)

        [
            {
            "results": [
                {
                    "id": "4f492334-fdab-eb11-89ee-00155d0ee999",
                    "name": "AdminPulse-sample.docx",
                    "documentDate": "2021-05-03T10:49:16.962Z",
                    "documentType": 13,
                    "createDate": "2021-05-03T10:49:16.9620547Z",
                    "updateDate": "2021-05-03T11:02:23.1802061Z",
                    "signingStatus": 1,
                    "documentUrl": "https://dev-storage.adminpulse.be/db9f4bac-4246-4c9d-98de-99/other-documents/4f492334-fdab-eb11-89ee-00155d0eeb6e?sv=2018-03-28&sr=b&sig=01Tn1U3l9Vt47iItfY5pPhNaFsCZfND7%2BaGG1TPUp2c%3D&se=2021-09-22T08%3A25%3A59Z&sp=r&rsct=application%2Fvnd.openxmlformats-officedocument.wordprocessingml.document&rscd=attachment%3B filename%3D\"DO%2520NOT%2520DELETE%2520-%2520AdminPulse-invoice-template-fields%2520%2810%29.docx\"",
                    "mimeType": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "tags": [
                        {
                            "name": "Permanent Dossier"
                        }
                    ],
                    "relationIdentifiers": [
                        "APR00575"
                    ]
                ],
            "currentPage": 0,
            "pageCount": 2,
            "pageSize": 5,
            "totalRowCount": 7
            }
        ]

## Get tags [/documents/tags]

### Tags [GET]
* Multiple tags can be assigned when adding a document.
* This method will return all available tags.

+ Response 200 (application/json)

        [
            {
                "name": "Personal"
            },
            {
                "name": "Prio"
            },
            {
                "name": "BTW"
            }
        ]

# Group Tasks
#### Task status types
* ToDo = 0,
* InProgress = 1,
* Done = 2

## Update status [/tasks/updateStatus]

### Update status [POST]

+ Request (application/json)
    + Attributes
        + deadline: `2020-12-30` (string, required) - Date format as yyyy-mm-dd
        + mainTaskName: `BTW listing`  (string, required)
        + subTaskName: `BTW listing opstellen`  (string, required)
        + inapplicable (boolean)
        + isBlocked (boolean)
        + status: `2` (number)

+ Response 200 (application/json)

# Group Interactions
#### Interaction types
* Note = 0,
* Telephone = 1,
* Appointment = 3

## Add interaction [/interactions/add]

### Add interaction [POST]

+ Request (application/json)
    + Attributes
        + title: `This is a sample interaction title` (string, required)
        + description: `This is a sample description` (string)
        + relationIdentifier: `APR00001` (string)
        + interactiontype: `0` (number)
        + deadline: `30122020` (string, required) - Date format as ddMMyyyy

+ Response 200 (application/json)